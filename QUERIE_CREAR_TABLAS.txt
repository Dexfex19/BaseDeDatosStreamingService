CREATE TABLE artista (
    idartista        integer GENERATED ALWAYS AS IDENTITY, 
    nombre           VARCHAR2(100) NOT NULL,
    fechanacimiento  DATE NOT NULL,
    edad             INTEGER NOT NULL,
    sexo             CHAR(1) NOT NULL,
    pais             VARCHAR2(30) NOT NULL
);

ALTER TABLE artista ADD CONSTRAINT artista_pk PRIMARY KEY ( idartista );

CREATE TABLE audio (
    codigoidiomaaudio  INTEGER NOT NULL,
    produccion_id      INTEGER NOT NULL
);

CREATE TABLE cliente (
    id               INTEGER GENERATED ALWAYS AS IDENTITY, 
    nombre           VARCHAR2(100) NOT NULL,
    fechanacimiento  DATE NOT NULL,
    telefono         VARCHAR2(15) NOT NULL,
    email            VARCHAR2(30) NOT NULL,
    direccion        VARCHAR2(200) NOT NULL,
    pais             VARCHAR2(30) NOT NULL,
    tipocuenta       INTEGER NOT NULL,
    fechainclusion   DATE
);

ALTER TABLE cliente ADD CONSTRAINT cliente_pk PRIMARY KEY ( id );


CREATE TABLE descarga (
    fechadescarga              DATE NOT NULL,
    estadodescarga             CHAR(1) NOT NULL,
    tamanoarchivo              INTEGER NOT NULL,
    cliente_id                 INTEGER NOT NULL,
    produccion_id              INTEGER NOT NULL,
    dispositivo_iddispositivo  INTEGER NOT NULL
);


CREATE TABLE dispositivo (
    iddispositivo      INTEGER GENERATED ALWAYS AS IDENTITY,
    nombredispositivo  VARCHAR2(20),
    codigodispositivo  VARCHAR2(1) NOT NULL,
    cliente_id         INTEGER NOT NULL,
    id                 INTEGER NOT NULL
);

ALTER TABLE dispositivo ADD CONSTRAINT dispositivo_pk PRIMARY KEY ( iddispositivo );

CREATE TABLE genero (
    genero_id               INTEGER GENERATED ALWAYS AS IDENTITY,
    nombregenero            VARCHAR2(30) NOT NULL
);

ALTER TABLE genero ADD CONSTRAINT genero_pk PRIMARY KEY (genero_id);

CREATE TABLE saga (
    idsaga      INTEGER GENERATED ALWAYS AS IDENTITY,
    nombre      VARCHAR2(100) NOT NULL,
    tema        VARCHAR2(100) NOT NULL
);
ALTER TABLE saga ADD CONSTRAINT saga_pk PRIMARY KEY ( idsaga );

CREATE TABLE macroserie (
    idmacroserie   INTEGER GENERATED ALWAYS AS IDENTITY,
    nombre         VARCHAR2(100) NOT NULL,
    temamacroserie VARCHAR2(100) NOT NULL
);
ALTER TABLE macroserie ADD CONSTRAINT macroserie_pk PRIMARY KEY ( idmacroserie );


CREATE TABLE docuserie (
    iddocuserie    INTEGER GENERATED ALWAYS AS IDENTITY,
    nombre         VARCHAR2(100) NOT NULL,
    temadocuserie  VARCHAR2(100) NOT NULL
);

ALTER TABLE docuserie ADD CONSTRAINT docuserie_pk PRIMARY KEY ( iddocuserie );


CREATE TABLE produccion (
    id                INTEGER GENERATED ALWAYS AS IDENTITY,
    codigoproduccion  INTEGER NOT NULL,
    titulo            VARCHAR2(50) NOT NULL,
    annio             DATE NOT NULL,
    pais              VARCHAR2(30),
    estudio           VARCHAR2(30),
    clasificacion     VARCHAR2(5) NOT NULL,
    duracion          FLOAT,
    abstract          VARCHAR2(100),
    temporadas        INTEGER,
    episodios         INTEGER,
    genero_genero_id  NUMBER NOT NULL
);
ALTER TABLE produccion ADD CONSTRAINT produccion_pk PRIMARY KEY ( id );

ALTER TABLE produccion
ADD saga INTEGER;

ALTER TABLE produccion
ADD macroserie INTEGER;

ALTER TABLE produccion
ADD docuserie INTEGER;

ALTER TABLE produccion
ADD CONSTRAINT produccion_saga_fk FOREIGN KEY (saga)
    REFERENCES saga (idsaga);

ALTER TABLE produccion
ADD CONSTRAINT produccion_macroserie_fk FOREIGN KEY (macroserie)
    REFERENCES macroserie (idmacroserie);

ALTER TABLE produccion
ADD CONSTRAINT produccion_docuserie_fk FOREIGN KEY (docuserie)
    REFERENCES docuserie (iddocuserie);

CREATE TABLE reproduccion (
    fechainicio        DATE NOT NULL,
    estadoactual       CHAR(1) NOT NULL,
    minutomasreciente  INTEGER NOT NULL,
    cliente_id         INTEGER NOT NULL,
    produccion_id      INTEGER NOT NULL
);

CREATE TABLE rol (
    codigorol          INTEGER NOT NULL,
    produccion_id      INTEGER NOT NULL,
    artista_idartista  INTEGER NOT NULL,
    idrol              INTEGER GENERATED ALWAYS AS IDENTITY
);

ALTER TABLE rol ADD CONSTRAINT rol_pk PRIMARY KEY ( idrol );

CREATE TABLE subtitulo (
    codigoidiomasub  INTEGER NOT NULL,
    produccion_id    INTEGER NOT NULL
);

ALTER TABLE audio
    ADD CONSTRAINT audio_produccion_fk FOREIGN KEY ( produccion_id )
        REFERENCES produccion ( id );

ALTER TABLE descarga
    ADD CONSTRAINT descarga_cliente_fk FOREIGN KEY ( cliente_id )
        REFERENCES cliente ( id );

ALTER TABLE descarga
    ADD CONSTRAINT descarga_dispositivo_fk FOREIGN KEY ( dispositivo_iddispositivo )
        REFERENCES dispositivo ( iddispositivo );

ALTER TABLE descarga
    ADD CONSTRAINT descarga_produccion_fk FOREIGN KEY ( produccion_id )
        REFERENCES produccion ( id );

ALTER TABLE dispositivo
    ADD CONSTRAINT dispositivo_cliente_fk FOREIGN KEY ( cliente_id )
        REFERENCES cliente ( id );

ALTER TABLE produccion
    ADD CONSTRAINT produccion_genero_fk FOREIGN KEY ( genero_genero_id )
        REFERENCES genero ( genero_id );

ALTER TABLE reproduccion
    ADD CONSTRAINT reproduccion_cliente_fk FOREIGN KEY ( cliente_id )
        REFERENCES cliente ( id );

ALTER TABLE reproduccion
    ADD CONSTRAINT reproduccion_produccion_fk FOREIGN KEY ( produccion_id )
        REFERENCES produccion ( id );

ALTER TABLE rol
    ADD CONSTRAINT rol_artista_fk FOREIGN KEY ( artista_idartista )
        REFERENCES artista ( idartista );

ALTER TABLE rol
    ADD CONSTRAINT rol_produccion_fk FOREIGN KEY ( produccion_id )
        REFERENCES produccion ( id );

ALTER TABLE subtitulo
    ADD CONSTRAINT subtitulo_produccion_fk FOREIGN KEY ( produccion_id )
        REFERENCES produccion ( id );


---- Tabla para el avance 3 nada mas-----


CREATE TABLE pago (
    id_pago NUMBER GENERATED ALWAYS AS IDENTITY,
    cliente_id NUMBER NOT NULL,
    monto FLOAT NOT NULL,
    fecha_pago DATE NOT NULL,
    metodo_pago VARCHAR2(50),
    estado_pago VARCHAR2(50),
    PRIMARY KEY (id_pago),
    FOREIGN KEY (cliente_id) REFERENCES cliente(id)
);

